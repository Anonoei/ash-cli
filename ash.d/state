function _ash_state_help {
    echo "Usage:  ash state COMMAND"
    echo ""
    echo "Configuration helper"
    echo ""
    echo "Commands:"
    commands=(
        "help;show_this_message"
        "config;prints_current_config"
        "extra;prints_current_extra_config"
        "edit;open_editor_on_config"
        "reset;resets_config_to_default"
        "vars;show_ASH_variables"
        "changelog;show_ASH_changelog"
    )
    _ash_fmt_help_items "${commands[@]}"
    echo ""
}

if [[ $# -eq 0 ]]; then
    _ash_state_help
    return
fi

function _ash_state_reset {
    rm $ASH_CONFIG/ash.conf
    cp "$ASH_ROOT/ash.conf.defaults" "$ASH_CONFIG/ash.conf"
    ash reload
}

function _ash_state_vars {
    echo "ASH_VERSION........$ASH_VERSION"
    echo "ASH_ROOT...........$ASH_ROOT"
    echo "ASH_INST...........$ASH_INST"
    echo "ASH_HOME...........$ASH_HOME"
    echo "ASH_DOWN...........$ASH_DOWN"
    echo "ASH_DISTRO.........$ASH_DISTRO"
    echo "ASH_PKGMAN.........$ASH_PKGMAN"
}

function _ash_state_changelog {
    local gh_user=${1:-"anonoei"}
    local gh_repo=${2:-"ash-cli"}
    local limit=${3:-10}

    local parsed=$(curl -sS https://api.github.com/repos/$gh_user/$gh_repo/commits | python -c 'import json, sys;
result = json.load(sys.stdin);
print("\n".join([item["commit"]["author"]["date"] + ";" + item["commit"]["message"] for item in result]))';
    )

    local count=0
    local commits=$(echo "$parsed" | wc -l)

    while read -r line; do
        if [[ $count -gt $limit ]]; then
            return
        fi
        local line=${line// /_}
        local line=(${line//\;/ })

        local com_date=${line[0]}
        local com_desc=${line[1]}

        local com_date=${com_date//_/ }
        local com_desc=${com_desc//_/ }

        echo "${commits}: ${com_date} - ${com_desc}"
        ((commits--))
        ((count++))
    done <<< "$parsed"
}

ASH_CMD=$1
shift
case $ASH_CMD in
    help|-h|--help)
        _ash_state_help $*
        ;;
    config)
        cat $ASH_CONFIG/ash.conf
        ;;
    extra)
        cat $ASH_CONFIG/ash.plugs
        ;;
    edit)
        vi $ASH_CONFIG/ash.conf
        ;;
    reset)
        _ash_state_reset $*
        ;;
    vars)
        _ash_state_vars $*
        ;;
    changelog)
        _ash_state_changelog $*
        ;;
    *)
        _ash_fmt_help_unk "ash config" $ASH_CMD $*
        ;;
esac
